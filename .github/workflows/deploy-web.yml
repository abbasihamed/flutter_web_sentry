name: Build & Deploy Flutter Web

on:
  push:
    branches: [main]

env:
  FLUTTER_VERSION: "3.22.0"   # pin to the version you use

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: 3.32.7  # latest stable including Dart 3.8.1

      # 3. Install dependencies
      - name: Get packages
        run: flutter pub get

      # 4. Build web with source maps
      - name: Build web
        run: flutter build web --release --source-maps

      # 5. Compute deterministic release/dist
      - name: Set release/dist
        id: vars
        run: |
          # use the commit SHA as the dist so every push is unique
          echo "RELEASE=test_sentry_web@${{ github.ref_name }}+${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "DIST=${{ github.sha }}" >> $GITHUB_OUTPUT

      # 6. Upload source maps
      - name: Install Sentry CLI
        run: |
          curl -sL https://sentry.io/get-cli/ | bash

      - name: Upload source maps
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG:        ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT:    ${{ secrets.SENTRY_PROJECT }}
        run: |
          sentry-cli releases new "${{ steps.vars.outputs.RELEASE }}"
          sentry-cli releases set-commits "${{ steps.vars.outputs.RELEASE }}" --auto
          sentry-cli releases files "${{ steps.vars.outputs.RELEASE }}" \
            upload-sourcemaps build/web/ \
            --dist ${{ steps.vars.outputs.DIST }} \
            --rewrite
          sentry-cli releases finalize "${{ steps.vars.outputs.RELEASE }}"

      # 7. Deploy (GitHub Pages example)
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: build/web